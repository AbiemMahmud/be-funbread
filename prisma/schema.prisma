// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id String @id @unique @default(cuid())
  name String @unique @db.VarChar(100)
  email String @unique @db.VarChar(50)
  profile_picture String? @db.Text
  phone_number String? @db.VarChar(15)
  role UserRoles @default(Worker)
  password String 
  jobdesk String @db.VarChar(30)
  created_at DateTime @default(dbgenerated("CURRENT_TIMESTAMP")) @db.Timestamp()
  updated_at DateTime @default(dbgenerated("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP")) @db.Timestamp()
}

model Product {
  id String @id @unique @default(cuid())
  product_code String @db.VarChar(30)
  name String @db.VarChar(50)
  picture String @db.LongText
  price Int
  created_at DateTime @default(dbgenerated("CURRENT_TIMESTAMP")) @db.Timestamp()
  updated_at DateTime @default(dbgenerated("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP")) @db.Timestamp()
}

model CategoryProduct {
  id Int @id @unique @default(autoincrement())
  label String @db.VarChar(50)
  created_at DateTime @default(dbgenerated("CURRENT_TIMESTAMP")) @db.Timestamp()
  updated_at DateTime @default(dbgenerated("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP")) @db.Timestamp()
}

model DetailProduct {
  id Int @id @unique @default(autoincrement())
  production_date DateTime
  expiry_date DateTime
  age Int
}

enum UserRoles {
  Owner
  Worker
}



